{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","service/MarvelService.js","hooks/http.hook.js","components/errorBoundaries/ErrorBoundary.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPages.js"],"names":["ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","a","offset","res","results","map","_transformCharacter","getCharacter","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","getAllComics","resCom","_transformComics","getComics","n","title","page","pageCount","price","prices","ErrorBoundary","state","errorInfo","console","log","this","setState","props","children","Component","AppBanner","className","avengers","avengersLogo","ComicsList","setComics","setOffset","comicsEnded","setComicsEnded","loandingMore","setLoadingMore","useEffect","onRequest","initial","then","onComicsAllLoaded","newComics","ended","length","comicsRefs","useRef","errorMessage","spinner","Spinner","content","arr","i","tabIndex","ref","el","current","onClick","onComicsSelected","to","ViewComics","disabled","ComicsPages"],"mappings":"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","file":"static/js/4.bf2b4fb8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} src={img} alt='error'/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n    const {loading, request, error, clearError} = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=2813600ead6a7195f6ec5f57400c79d3';\r\n    const _apiNum = 80;\r\n\r\n    const _apiComNum = 99;\r\n    // будемо робити запити до нашого сервера(api)\r\n    // запит по всіх персонажах\r\n    const getAllCharacters = async (offset = _apiNum) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n        // res.data.results.map(); - для того щоб сформувати масив з новими обєктами\r\n        // ?? - якщо перша змінна undefined || null тоді буде те що з права\r\n    }\r\n\r\n\r\n    // запит по певному одному персонажу\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? char.description.slice(0, 210) : 'There is no description for this character',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url, \r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const getAllComics = async(offset = _apiComNum) => {\r\n        const resCom = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\r\n        return resCom.data.results.map(_transformComics);\r\n    }\r\n\r\n    const getComics = async(id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _transformComics(res.data.results[0]);\r\n    }\r\n\r\n    const _transformComics = (n) => {\r\n        return {\r\n            id: n.id,\r\n            thumbnail: n.thumbnail.path + '.' + n.thumbnail.extension,\r\n            name: n.title,\r\n            description: n.description ? n.description.slice(0, 210) : 'There is no description for this character',\r\n            // language: n.textObjects[0].language,\r\n            page: n.pageCount,\r\n            price: n.prices[0].price\r\n\r\n        }\r\n    }\r\n    \r\n    return {loading, error, getAllCharacters, getCharacter, clearError, getAllComics, getComics}\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, \r\n        method = 'GET', \r\n        body = null, \r\n        headers = {'Content-Type': 'application/json'}) => {\r\n\r\n            setLoading(true);\r\n\r\n            try {\r\n                const response = await fetch(url, {method, body, headers});\r\n\r\n                if(!response.ok) {\r\n                    throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n                }\r\n\r\n                const data = await response.json();\r\n\r\n                setLoading(false);\r\n                return data;\r\n\r\n                \r\n            } catch(e) {\r\n                setLoading(false);\r\n                setError(e.message);\r\n                throw e;\r\n            }\r\n\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n    \r\n    return {loading, request, error, clearError}\r\n}","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect, useRef } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../service/MarvelService';\nimport './comicsList.scss';\n\nconst ComicsList = (props) => {\n\n    const [comics, setComics] = useState([]);\n    const [offset, setOffset] = useState(356);\n    const [comicsEnded, setComicsEnded] = useState(false);\n    const [loandingMore, setLoadingMore] = useState(false);\n\n    const {loading, error, getAllComics} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true)\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setLoadingMore(false) : setLoadingMore(true);\n        getAllComics(offset)\n            .then(onComicsAllLoaded)\n    }\n\n    const onComicsAllLoaded = (newComics) => {\n        let ended = false;\n        if(newComics.length < 8) {\n            ended = true\n        }\n\n        setComics(comics => [...comics, ...newComics]);\n        setLoadingMore(loandingMore => false);\n        setOffset(offset => offset + 9);\n        setComicsEnded(comicsEnded => ended);\n    }\n\n    const comicsRefs = useRef([]);\n\n    function ViewComics(arr) {\n        const comics = arr.map((n, i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if(n.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            return (\n                <li className=\"comics__item\"\n                    tabIndex={0}\n                    ref={el => comicsRefs.current[i] = el}\n                    key={i}\n                    onClick={() => {\n                        props.onComicsSelected(n.id);\n                    }}>\n\n                    <NavLink to={`/comics/${n.id}`} /* href=\"/2\" */>\n                        <img src={n.thumbnail} alt={n.name} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{n.name}</div>\n                        <div className=\"comics__item-price\">{n.price}$</div>\n                    </NavLink>\n                </li>\n            )\n        });\n\n        return (\n            <ul className=\"comics__grid\"> \n                {comics}\n            </ul>\n \n        )\n\n    }\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !loandingMore ? <Spinner/> : null;\n    const content = ViewComics(comics);\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {content}\n\n            <button \n            className=\"button button__main button__long\"\n            disabled={loandingMore}\n            style={{'display': comicsEnded ? 'none' : 'block'}}\n            onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\nComicsList.propTypes = {\n    onComicsSelected: PropTypes.func.isRequired\n}\nexport default ComicsList;","import { useState } from \"react\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\nimport ErrorBoundary from \"../errorBoundaries/ErrorBoundary\";\r\nconst ComicsPages = () => {\r\n  const [selectedComics, setComics] = useState(null);\r\n\r\n  const onComicsSelected = (id) => {\r\n    setComics(id);\r\n  };\r\n  return (\r\n    <>\r\n    <AppBanner/>\r\n      <ErrorBoundary>\r\n        <ComicsList onComicsSelected={onComicsSelected} />\r\n      </ErrorBoundary>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ComicsPages;\r\n"],"sourceRoot":""}